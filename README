This is a very small CMS project. It's made by overriding Django's FlatPage app.
By doing this we can add extra fields at the FlatPage model. I have added some extra fields:
- published: A boolean so one can prepare a page and publish it when it's ready.
- styles: A text field for adding extra style to a page. It can be code enclosed in <style></style>tags or a file.
- scripts: As above but it will be used for extra javascript.
- keywords: For populating the keywords meta tag.
- description: For populating the description meta tag.

I have also added a Menu model which groups relevant pages and displays the appropriate menu.
For example, by creating a menu with a url /products/ it will link and display all pages that start with /products/.

Menus, like pages, can be viewed by all or by authenticated users.
When a menu has the "required authentication" field checked, it will only be visible by logged in users.
It will still display all the pages matching it's url regardless if the pages themselves require authentication.

The main app of this project is fpg and can be used at other projects with minor modifications.

Credits:
pCMS has tinyMCE at the admin interface for designing the page.
http://www.tinymce.com/
It also includes elfinder for uploading images.
http://elrte.org/elfinder
Django-python connector for elfinder by Dmitry Shapoval
https://bitbucket.org/unkier/django-elfinder/overview
The template used for rendering pages is Bootstrap from Twitter.
http://twitter.github.com/bootstrap/
The search algorithm is based on Julien Phalip's post
http://julienphalip.com/post/2825034077/adding-search-to-a-django-site-in-a-snap
